#__BEGIN_LICENSE__
# Copyright (c) 2015, United States Government, as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All rights reserved.
#
# The xGDS platform is licensed under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#__END_LICENSE__
    - stat:
        path: "code-prep/devDbSettings.sql"
      register: dev_db_settings

    - file:
        path: "{{ source_root }}/xgds_{{xgds_sitename}}/data"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: www-data
        mode: "u=rwX,g=rwX,o=rX"
      become: yes

    - file:
        path: "{{ source_root }}/xgds_{{xgds_sitename}}/data/relay"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: www-data
        mode: "u=rwX,g=rwX,o=rX"
      become: yes
        
    - file:
        path: "{{ source_root }}/xgds_{{xgds_sitename}}/data/xgds_map_server/geoTiff/temp"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: www-data
        mode: "u=rwX,g=rwX,o=rX"
        recurse: yes
      become: yes
        
    - file:
        path: "{{ source_root }}/xgds_{{xgds_sitename}}/data/dem"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: www-data
        mode: "u=rwX,g=rwX,o=rX"
      become: yes
        
    - django_manage:
        command: "bootstrap --yes genSourceme genSettings"
        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"

    - django_manage:
        command: "prepnpm"
        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"

#    - django_manage:
#        command: "prep"
#        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"
#      notify:
#        - Restart apache2

    - django_manage:
        command: "prepmigrations"
        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"
      when: xgds_database.changed == True

    - django_manage:
        command: "migrate"
        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"
      when: xgds_database.changed == True

    - django_manage:
        command: "prepfixtures"
        app_path: "{{ source_root }}/xgds_{{xgds_sitename}}"
      when: xgds_database.changed == True

    - name: Import developer overrides to database
      mysql_db:
        name: xgds_{{ xgds_sitename }}
        state: import
        login_user: "{{ mysql_user }}"
        login_password: "{{ db_password }}"
        target: code-prep/devDbSettings.sql
      when: dev_db_settings.stat.exists == True

    - name: Install timezone db into MySQL
      shell: mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root --password={{ db_password }} mysql

    - name: Enable pyraptor service.
      service:
        name: pyraptord
        enabled: yes
        pattern: pyraptord
        state: started
      become: true

      # Note that the below environment should match the config in settings.py
      # If you need to change one, change the other to match.
    - name: Install xgds superuser
      shell: |
        source sourceme.sh
        python -c "import django; django.setup(); from django.contrib.auth.models import User; User.objects.create_superuser(username='{{django_superuser}}', password='{{django_superuser_password}}', email='')"
      args:
        chdir: "{{ source_root }}/xgds_{{xgds_sitename}}"
      environment:
        PYTHONPATH: "{{source_root}}:{{source_root}}/xgds_{{xgds_sitename}}/apps:$PYTHONPATH"
        DJANGO_SETTINGS_MODULE: "xgds_{{xgds_sitename}}.settings"
        DJANGO_SCRIPT_NAME: "/"
      when: xgds_database.changed == True
      notify:
        - Restart apache2

#    - name: symlink static rest
#      file:
#        src: "{{ source_root }}/xgds_{{xgds_sitename}}/build/static"
#        dest: "{{ source_root }}/xgds_{{xgds_sitename}}/build/static/rest"
#        state: link
#      become: true